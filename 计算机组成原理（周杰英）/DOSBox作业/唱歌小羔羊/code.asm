STACK SEGMENT PARA STACK 'STACK'
      DB 32 DUP(0)
STACK ENDS

DATA SEGMENT
FREQ_L DW 330, 1, 294, 1, 262, 1, 294, 1, 330, 1, 330, 1
       DW 330, 2, 294, 1, 294, 1, 294, 2, 330, 1, 392, 1
       DW 392, 2, 330, 1, 294, 1, 262, 1, 294, 1, 330, 1
       DW 330, 1, 330, 1, 330, 1, 294, 1, 294, 1, 330, 1
       DW 294, 1, 262, 4, 0
DATA ENDS

CODE SEGMENT
     ASSUME CS:CODE, DS:DATA, SS:STACK
BEGIN:
     MOV AX, DATA
     MOV DS, AX
     MOV AL, 0B6H
     OUT 43H, AL
     LEA DI, FREQ_L
NEXT:MOV AX, 34DEH
     MOV DX, 0012H
     MOV BX, [DI]
     CMP BX, 0
     JZ DONE
     DIV BX
     OUT 42H, AL
     MOV AL, AH
     OUT 42H, AL
     IN AL, 61H
     MOV AH, AL
     OR AL, 3
     OUT 61H, AL   
     INC DI
     INC DI
     MOV BX, [DI]
     CALL DELAY
     INC DI
     INC DI
     MOV AL, AH
     OUT 61H, AL
     CALL DELAY2
     JMP NEXT
DONE:
     MOV AH, 4CH
     INT 21H
DELAY PROC
     PUSH AX
AGAIN1:
     MOV CX, 65530
AGAIN:
     IN AL, 61H
     AND AL, 10H
     CMP AL, AH
     JE AGAIN
     MOV AH, AL
     LOOP AGAIN
     DEC BL
     JNZ AGAIN1
     POP AX
     RET
DELAY ENDP
DELAY2 PROC
     MOV CX, 6500
REPEAT1:
     IN AL, 61H
     AND AL, 10H
     CMP AL, AH
     JE REPEAT1 
     MOV AH, AL
     LOOP REPEAT1
     RET
DELAY2 ENDP
CODE ENDS
     END BEGIN